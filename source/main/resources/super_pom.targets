<Project ToolsVersion="4.0" DefaultTargets="Info" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Project="super_pom_imports.targets"/>
  <Import Project="super_pom.inline"/>

  <!-- These are the XCode lifecycle targets that can be overriden -->
  <Target Name = "__Validate"></Target>
  <Target Name = "__Initialize"></Target>
  <Target Name = "__SourcesGenerate"></Target>
  <Target Name = "__SourcesProcess"></Target>
  <Target Name = "__ResourcesGenerate"></Target>
  <Target Name = "__ResourcesProcess"></Target>
  <Target Name = "__Sync"></Target>
  <Target Name = "__Compile"></Target>
  <Target Name = "__CompilePost"></Target>
  <Target Name = "__TestSourcesGenerate"></Target>
  <Target Name = "__TestSourcesProcess"></Target>
  <Target Name = "__TestResourcesGenerate"></Target>
  <Target Name = "__TestResourcesProcess"></Target>
  <Target Name = "__TestCompile"></Target>
  <Target Name = "__TestCompile_post"></Target>
  <Target Name = "__TestRun"></Target>
  <Target Name = "__PackagePrepare"></Target>
  <Target Name = "__Package"></Target>
  <Target Name = "__IntegrationTestPre"></Target>
  <Target Name = "__IntegrationTestRun"></Target>
  <Target Name = "__IntegrationTestPost"></Target>
  <Target Name = "__Verify"></Target>
  <Target Name = "__Install"></Target>
  <Target Name = "__Deploy"></Target>

  <Target Name="XCodePackageVersionTime">
    <Time>
      <Output TaskParameter="Year" PropertyName="XCodePackageVersionYear" />
      <Output TaskParameter="Month" PropertyName="XCodePackageVersionMonth" />
      <Output TaskParameter="Day" PropertyName="XCodePackageVersionDay" />
      <Output TaskParameter="Hour" PropertyName="XCodePackageVersionHour" />
      <Output TaskParameter="Minute" PropertyName="XCodePackageVersionMinute" />
      <Output TaskParameter="Second" PropertyName="XCodePackageVersionSecond" />
    </Time>
  </Target>

  <Target Name="XCodePackageGroupSplit">
    <SplitGroup Group="$(XCodePackageGroup)">
      <Output PropertyName="XCodePackageGroupH" TaskParameter="GroupH"/>
      <Output PropertyName="XCodePackageGroupM" TaskParameter="GroupM"/>
      <Output PropertyName="XCodePackageGroupL" TaskParameter="GroupL"/>
    </SplitGroup>
  </Target>


  <!-- These are the core xcode lifecycle targets and should not be overriden!! -->
  <Target Name = "Validate" DependsOnTargets=""><CallTarget Targets="__Validate" /></Target>
  <Target Name = "Initialize" DependsOnTargets="Validate">
    <CallTarget Targets="XCodePackageGroupSplit" />
    <CallTarget Targets="XCodePackageVersionTime" />
    <CallTarget Targets="__Initialize" />
  </Target>
  <Target Name = "SourcesGenerate" DependsOnTargets="Initialize"><CallTarget Targets="__SourcesGenerate" /></Target>
  <Target Name = "SourcesProcess" DependsOnTargets="SourcesGenerate"><CallTarget Targets="__SourcesProcess" /></Target>
  <Target Name = "ResourcesGenerate" DependsOnTargets="SourcesProcess"><CallTarget Targets="__ResourcesGenerate" /></Target>
  <Target Name = "ResourcesProcess" DependsOnTargets="ResourcesGenerate"><CallTarget Targets="__ResourcesProcess" /></Target>
  <Target Name = "Compile" DependsOnTargets="ResourcesProcess">
    <CallTarget Targets="__Sync" />
    <CallTarget Targets="__Compile" />
  </Target>
  <Target Name = "CompilePost" DependsOnTargets="Compile"><CallTarget Targets="__CompilePost" /></Target>
  <Target Name = "TestSourcesGenerate" DependsOnTargets="CompilePost"><CallTarget Targets="__TestSourcesGenerate" /></Target>
  <Target Name = "TestSourcesProcess" DependsOnTargets="TestSourcesGenerate"><CallTarget Targets="__TestSourcesProcess" /></Target>
  <Target Name = "TestResourcesGenerate" DependsOnTargets="TestSourcesProcess"><CallTarget Targets="__TestResourcesGenerate" /></Target>
  <Target Name = "TestResourcesProcess" DependsOnTargets="TestResourcesGenerate"><CallTarget Targets="__TestResourcesProcess" /></Target>
  <Target Name = "TestCompile" DependsOnTargets="TestResourcesProcess"><CallTarget Targets="__TestCompile" /></Target>
  <Target Name = "TestCompilePost" DependsOnTargets="TestCompile"><CallTarget Targets="__TestCompilePost" /></Target>
  <Target Name = "TestRun" DependsOnTargets="TestCompilePost"><CallTarget Targets="__TestRun" /></Target>
  <Target Name = "PackagePrepare" DependsOnTargets="TestRun"><CallTarget Targets="__PackagePrepare" /></Target>
  <Target Name = "Package" DependsOnTargets="PackagePrepare"><CallTarget Targets="__Package" /></Target>
  <Target Name = "IntegrationTestPre" DependsOnTargets="Package"><CallTarget Targets="__IntegrationTestPre" /></Target>
  <Target Name = "IntegrationTestRun" DependsOnTargets="IntegrationTestPre"><CallTarget Targets="__IntegrationTestRun" /></Target>
  <Target Name = "IntegrationTestPost" DependsOnTargets="IntegrationTestRun"><CallTarget Targets="__IntegrationTestPost" /></Target>
  <Target Name = "Verify" DependsOnTargets="IntegrationTestPost"><CallTarget Targets="__Verify" /></Target>
  <Target Name = "Install" DependsOnTargets="Verify"><CallTarget Targets="__Install" /></Target>
  <Target Name = "Deploy" DependsOnTargets="Install"><CallTarget Targets="__Deploy" /></Target>

  <Target Name = "Info" />
  <Target Name = "Clean" />


  <Target Name="HgExtractRevision" Condition="'$(MSBuildMercurialTasksAvailable)' == 'true'" DependsOnTargets="MavenEnvironmentExtensionChecks">
    <HgVersion LocalPath="$(MSBuildProjectDirectory)" Timeout="5000">
      <Output TaskParameter="Changeset" PropertyName="XCodePackageVcsRevision" />
    </HgVersion>
    <HgBranch LocalPath="$(MSBuildProjectDirectory)" Timeout="5000">
      <Output TaskParameter="BranchName" PropertyName="XCodePackageVcsBranch" />
    </HgBranch>
  </Target>
  
  <Target Name="PackageCreate" DependsOnTargets="HgExtractRevision;XCodePackageVersionTime">
    <PropertyGroup>
      <XCodePackageBuildDate>$(XCodePackageBuildYear).$(XCodePackageBuildMonth).$(XCodePackageBuildDay).$(XCodePackageBuildHour).$(XCodePackageBuildMinute).$(XCodePackageBuildSecond)</XCodePackageBuildDate>
      <XCodePackageBuildRev>$(XCodePackageVcsBranch).$(XCodePackageVcsRevision)</XCodePackageBuildRev>
    </PropertyGroup>
    <Message Text="Package Filename: $(XCodePackageName)_$(XCodePackageVersionMajor).$(XCodePackageVersionMinor).$(XCodePackageBuildDate).$(XCodePackageBuildRev)_$(XCodePackagePlatform)"/>
    <MSBuild.XCode.PackageCreate Path="@(XCodePackageDir)\target" Name="$(XCodePackageName)" ZipFilename="target\$(XCodePackageName)_$(XCodePackageVersionMajor).$(XCodePackageVersionMinor).$(XCodePackageBuildDate).$(XCodePackageBuildRev)_$(XCodePackagePlatform).zip"/>
  </Target>

  <Target Name="PackageCreatePrep">
    <!-- Delete the file in the target folder -->
    <ItemGroup>
      <XCodeCleanFiles Include="target\$(XCodePackageName)\$(XCodePackagePlatform)\**\*.*" />
    </ItemGroup>
    <Delete Files="@(XCodeCleanFiles)"/>

    <ItemGroup>
      <XCodePackageSrcFiles Include="source\**\*.*" Exclude="source\**\*.user;source\**\*.suo;source\**\*.sdf;source\**\*.opensdf;source\**\*.ipch" />
      <XCodePackageLibFiles Include="target\outdir\$(XCodePackageName)*\*$(XCodePackagePlatform)*.lib" />
      <XCodePackageToolsFiles Include="tools\**\*.*" />
      <XCodePackageDocFiles Include="docs\**\*.*" />
      <XCodePackagePomFiles Include="package.xml" />
    </ItemGroup>

    <Copy SourceFiles="@(XCodePackageSrcFiles)" DestinationFolder="target\$(XCodePackageName)\$(XCodePackagePlatform)\source\%(RecursiveDir)"/>
    <Copy SourceFiles="@(XCodePackageLibFiles)" DestinationFolder="target\$(XCodePackageName)\$(XCodePackagePlatform)\libs\$(XCodePackageName)"/>
    <Copy SourceFiles="@(XCodePackageToolsFiles)" DestinationFolder="target\$(XCodePackageName)\$(XCodePackagePlatform)\tools\%(RecursiveDir)"/>
    <Copy SourceFiles="@(XCodePackageDocFiles)" DestinationFolder="target\$(XCodePackageName)\$(XCodePackagePlatform)\docs\%(RecursiveDir)"/>
    <Copy SourceFiles="@(XCodePackagePomFiles)" DestinationFolder="target\$(XCodePackageName)\$(XCodePackagePlatform)\"/>
  </Target>

  <Target Name="__Package">
    <CallTarget Targets="PackageCreatePrep"></CallTarget>
    <CallTarget Targets="PackageCreate"></CallTarget>
  </Target>

  <!-- This will call msbuild multiple times for every item in PackageConfigTargets -->
  <Target Name="CompilePlatformForEveryTarget" Outputs="%(Package_config_targets.Identity)">
    <MSBuild Condition=" '$(XCodePackageSolution)' != ''" Projects="$(XCodePackageSolution)" Properties="Configuration=%(XCodePackageTargets.Identity);Platform=$(XCodePackagePlatform)"/>
  </Target>

  <Target Name="__Compile">
    <CallTarget Targets="CompilePlatformForEveryTarget"></CallTarget>
  </Target>

  <!-- This will call msbuild multiple times for every item in PackageConfigTargets -->
  <Target Name="CleanPlatformForEveryTarget" Outputs="%(Package_config_targets.Identity)">
    <MSBuild Projects="$(XCodePackageSolution)" Targets="Clean" Properties="Configuration=%(XCodePackageTargets.Identity);Platform=$(XCodePackagePlatform)"/>
  </Target>
  
  <Target Name="Clean">
    <CallTarget Targets="CleanPlatformForEveryTarget"></CallTarget>
  </Target>

  <Target Name="GenerateCppProjects">
    <MSBuild.XCode.GenerateCppProject TemplatePath="$(XCodePackageLocalRepoURL)com\virtuos\xcode\templates\vcxproj_template.xml" PackagePath="$(XCodePackageDir)\package.xml"  />
  </Target>

  <Target Name="ConstructStage1">
    <!-- Generate folder -->
    <MakeDir Directories="$(XCodePackageName)" />
    <!-- Generate pom.props -->
    <ItemGroup>
      <TemplateTokens Include="main">
        <PackageName>$(XCodePackageName)</PackageName>
      </TemplateTokens>
    </ItemGroup>
    <!-- Copy pom.targets -->
    <Copy SourceFiles="$(XCodePackageLocalRepoURL)\com\virtuos\xcode\templates\pom.targets.template" DestinationFiles="$(XCodePackageName)\pom.targets" />
    <!-- Copy pom.props -->
    <FileTemplate Template="$(XCodePackageLocalRepoURL)\com\virtuos\xcode\templates\pom.props.template" Destination="$(XCodePackageName)\pom.props" Tokens="@(TemplateTokens)"/>
    <!-- Copy package.xml -->
    <FileTemplate Template="$(XCodePackageLocalRepoURL)\com\virtuos\xcode\templates\package.xml.template" Destination="$(XCodePackageName)\package.xml" Tokens="@(TemplateTokens)"/>
  </Target>

  <Target Name="ConstructStage2">

    <!-- Generate directory structure -->
    <MakeDir Directories="%(DirectoryStructure.Identity)" />

    <!-- Generate solution and vcxproj files -->
    <CallTarget Targets="GenerateCppProjects" />

  </Target>

  <Target Name="Construct">
    <!-- If pom.props, pom.targets and package.xml exist then -->
    <!--   Construct the directory structure -->
    <!--   Sync the dependencies -->
    <!--   Create the vcxproj for main and test -->
    <!--   Create the sln -->
    <!-- Else -->
    <!--   Generate pom.props -->
    <!--   Generate pom.targets -->
    <!--   Generate package.xml -->
    <!-- Endif -->

    <Message Text="$(XCodePackageDir)" />
    
    <CallTarget Targets="ConstructStage1" Condition="!Exists('$(XCodePackageDir)\pom.props') Or !Exists('$(XCodePackageDir)\pom.targets') Or !Exists('$(XCodePackageDir)\package.xml')"></CallTarget>
    <CallTarget Targets="ConstructStage2" Condition="Exists('pom.props') And Exists('pom.targets') And Exists('package.xml')"></CallTarget>
  </Target>

  <Target Name="Info" DependsOnTargets="HgExtractRevision;XCodePackageVersionTime">
    <Message Text="Package VCS Version    = $(XCodePackageVcsRevision)" />
    <Message Text="Package VCS Branch     = $(XCodePackageVcsBranch)" />
    <Message Text="Package Directory      = $(XCodePackageDir)" />
    <Message Text="Package Name           = $(XCodePackageName)" />
    <Message Text="Package Group          = $(XCodePackageGroup)" />
    <Message Text="Package Version        = $(XCodePackageVersionMajor).$(XCodePackageVersionMinor).$(XCodePackageVersionYear).$(XCodePackageVersionMonth).$(XCodePackageVcsBranch).$(XCodePackageVcsRevision)" />
    <Message Text="Package Platform       = $(XCodePackagePlatform)" />
    <Message Text="Package Platforms      = $(XCodePackagePlatforms)" />
    <Message Condition = " '$(XCodePackageLanguage)' == 'cpp' " 
             Text="Package Language       = C++" />
    <Message Condition = " '$(XCodePackageLanguage)' == 'cs' "
             Text="Package Language       = C#" />
  </Target>

  <Target Name="PackageInstall">
    <!-- Install the package zip in the local package repository -->
    <!-- Update latest in the local package repository -->
    <!-- Parameters to pass to the task: -->
    <!-- - Path to package zip file -->
    <!-- - URL of local package repositories -->
    <PropertyGroup>
      <SrcFilename>$(XCodePackageName)_$(XCodePackageVersionMajor).$(XCodePackageVersionMinor).$(XCodePackageVersionYear).$(XCodePackageVersionMonth).$(XCodePackageVersionDay).$(XCodePackageVersionHour).$(XCodePackageVersionMinute).$(XCodePackageVersionSecond).$(XCodePackageVcsBranch).$(XCodePackageVcsRevision)_$(XCodePackagePlatform)</SrcFilename>
      <SrcFilenameExt>.zip</SrcFilenameExt>
      <SrcFolder>$(XCodePackageDir)\target\</SrcFolder>
      <DstFolder>$(XCodePackageLocalRepoURL)$(XCodePackageGroupH)\$(XCodePackageGroupM)\$(XCodePackageGroupL)\$(XCodePackageName)\</DstFolder>
      <Name>$(XCodePackageName)</Name>
      <Major>$(XCodePackageVersionMajor)</Major>
      <Minor>$(XCodePackageVersionMinor)</Minor>
      <Year>$(XCodePackageVersionYear)</Year>
      <Month>$(XCodePackageVersionMonth)</Month>
      <Day>$(XCodePackageVersionDay)</Day>
      <Hour>$(XCodePackageVersionHour)</Hour>
      <Minute>$(XCodePackageVersionMinute)</Minute>
      <Second>$(XCodePackageVersionSecond)</Second>
      <Branch>$(XCodePackageVcsBranch)</Branch>
      <Revision>$(XCodePackageVcsRevision)</Revision>
      <Platform>$(XCodePackagePlatform)</Platform>
    </PropertyGroup>
    <MSBuild.XCode.PackageInstall SourcePath="$(SrcFolder)" SourceFilename="$(SrcFilename)$(SrcFilenameExt)" OldLatest="$(Name)_*$(Branch)*_$(Platform)*.latest" RepoPath="$(DstFolder)" VersionPath="$(Year)\$(Month)\" LatestPath="latest\" />
  </Target>
  <Target Name="__Install" DependsOnTargets="PackageInstall">
  </Target>

  <Target Name="PackageDeploy">
    <!-- Install the package zip in the remote package repository -->
    <!-- Update latest in the remote package repository -->
    <!-- Parameters to pass to the task: -->
    <!-- - Path to package zip file -->
    <!-- - URL of remote package repositories -->
    <PropertyGroup>
      <SrcFilename>$(XCodePackageName)_$(XCodePackageVersionMajor).$(XCodePackageVersionMinor).$(XCodePackageVersionYear).$(XCodePackageVersionMonth).$(XCodePackageVersionDay).$(XCodePackageVersionHour).$(XCodePackageVersionMinute).$(XCodePackageVersionSecond).$(XCodePackageVcsBranch).$(XCodePackageVcsRevision)_$(XCodePackagePlatform)</SrcFilename>
      <SrcFilenameExt>.zip</SrcFilenameExt>
      <SrcFolder>$(XCodePackageDir)\target\</SrcFolder>
      <DstFolder>$(Package_remote_url)$(XCodePackageGroupH)\$(XCodePackageGroupM)\$(XCodePackageGroupL)\$(XCodePackageName)\</DstFolder>
      <Name>$(XCodePackageName)</Name>
      <Major>$(XCodePackageVersionMajor)</Major>
      <Minor>$(XCodePackageVersionMinor)</Minor>
      <Year>$(XCodePackageVersionYear)</Year>
      <Month>$(XCodePackageVersionMonth)</Month>
      <Day>$(XCodePackageVersionDay)</Day>
      <Hour>$(XCodePackageVersionHour)</Hour>
      <Minute>$(XCodePackageVersionMinute)</Minute>
      <Second>$(XCodePackageVersionSecond)</Second>
      <Branch>$(XCodePackageVcsBranch)</Branch>
      <Revision>$(XCodePackageVcsRevision)</Revision>
      <Platform>$(XCodePackagePlatform)</Platform>
    </PropertyGroup>

    <MSBuild.XCode.PackageDeploy SourcePath="$(SrcFolder)" SourceFilename="$(SrcFilename)$(SrcFilenameExt)" OldLatest="$(Name)_*$(Branch)*_$(Platform)*.latest" RepoPath="$(DstFolder)" VersionPath="$(Year)\$(Month)\" LatestPath="latest\" />
  </Target>
  <Target Name="__Deploy" DependsOnTargets="PackageDeploy">
  </Target>

  <Target Name="PackageSync">
    <!-- Retrieve the dependencies, recursive -->
    <!-- Parameters to pass to the task: -->
    <!-- - Package name-->
    <!-- - Package path -->
    <!-- - Package dependency filename (package.xml) -->
    <!-- - Local package repository path -->
    <!-- - Remote package repository path -->
  </Target>
  <Target Name="__Sync" DependsOnTargets="PackageSync">
  </Target>

</Project>

